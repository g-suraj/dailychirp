---
import Header from "../components/Header.astro";
import Audio from "../components/Audio.astro";
import Loader from "../components/Loader.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>Daily Chirp</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"
    />

    <style is:global>
      .example::-webkit-scrollbar {
        display: none;
      }

      .example {
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
      }

      .styled-link {
        text-decoration: underline;
      }
      .button[disabled] {
        opacity: 1;
      }

      .image-container,
      .credits-details-container,
      .audio-container,
      .result {
        padding: 0;
      }

      .credits-details-container {
        font-size: 10px;
      }

      .audio-container,
      .result {
        margin-top: 3px;
      }

      .result {
        padding: 0 10px;
      }

      .bird-image {
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
      }

      @media (min-width: 900px) {
        .bird-image {
          width: 500px;
        }

        .bird-audio {
          width: 500px;
        }

        .buttons-container {
          width: 50%;
          margin: 0 auto;
        }

        .button-div {
          padding: 5px;
        }
      }

      @media (min-width: 300px) and (max-width: 900px) {
        .bird-audio,
        .guess-button,
        .buttons-container {
          width: 100%;
        }

        .bird-image {
          width: 70%;
        }

        .button-div {
          width: 50%;
          float: left;
        }
      }

      .audio-container {
        height: 6vh;
      }
    </style></head
  >

  <script>
    import type { Bird } from "../types/types";

    const today = new Date().toDateString();
    const loading = document.querySelector(".loading");
    const loaded = document.querySelector(".loaded");

    const result = document.querySelector(".result");
    const image = document.querySelector(".bird-image");

    const playButton = document.querySelector(".play");
    const refreshButton = document.querySelector(".refresh");

    const buttonsContainer = document.querySelector(".buttons-container");
    const creditsDetailsContainer = document.querySelector(
      ".credits-details-container",
    );

    async function stableStringToNumGenerator(
      str: string,
      modulo: number,
    ): Promise<number> {
      /* Generate stable random numbers which are index into the birds object */
      const msgUint8 = new TextEncoder().encode(str);
      const hashBuffer = await crypto.subtle.digest("SHA-256", msgUint8);
      const hashArray = Array.from(new Uint8Array(hashBuffer));
      return hashArray.reduce((prev, curr) => prev * curr) % modulo;
    }

    /* Helper to generate today's guesses in a stable manner */
    async function todaysGuesses(todayDateStr: string, numBirds: number) {
      const todaysIndex = await stableStringToNumGenerator(
        todayDateStr,
        numBirds,
      );
      console.log(todaysIndex);
      let guesses: number[] = [];
      for (let i = 0; i < 3; ++i) {
        guesses.push((todaysIndex + i + 1) % numBirds);
      }
      const insertionIndex = Math.floor(Math.random() * 4);
      guesses.splice(insertionIndex, 0, todaysIndex);
      return { todaysIndex, guesses };
    }

    window.addEventListener("load", async () => {
      setTimeout(() => {
        loading?.setAttribute("style", "display: none");
        loaded?.removeAttribute("style");
      }, 500);

      const data = await fetch(
        "https://suraj.fyi/xeno-canto-processed/pickled_data.json",
      );
      let audio: HTMLAudioElement | null = null;
      const birds: Bird[] = await data.json();
      const numBirds = birds.length;

      const todayDateStr = new Date().toDateString();
      const { todaysIndex, guesses } = await todaysGuesses(
        todayDateStr,
        numBirds,
      );

      const todaysBird = birds[todaysIndex];
      const pictureIndex = guesses[1] % todaysBird["_pictures"].length;
      const todaysPicture = todaysBird["_pictures"][pictureIndex];
      let occurenceIndex = guesses[0] % todaysBird["_occurrences"].length;
      let todaysOccurence = todaysBird["_occurrences"][occurenceIndex];

      if (creditsDetailsContainer) {
        creditsDetailsContainer.innerHTML = `Audio recording is courtesy of ${todaysOccurence["__rightsHolder"]}.`;
      }

      image?.setAttribute("src", todaysPicture);
      image?.removeAttribute("hidden");

      refreshButton?.addEventListener("click", () => {
        const wasPlaying = !audio?.paused;
        audio?.pause();
        occurenceIndex = Math.floor(
          Math.random() * todaysBird["_occurrences"].length,
        );
        todaysOccurence = todaysBird["_occurrences"][occurenceIndex];
        audio = new Audio(todaysOccurence["__birdsong"]);
        if (wasPlaying) {
          audio?.play();
        }
        if (creditsDetailsContainer) {
          creditsDetailsContainer.innerHTML = `Audio recording is courtesy of ${todaysOccurence["__rightsHolder"]}.`;
        }
      });

      playButton?.addEventListener("click", () => {
        if (!audio) {
          audio = new Audio(todaysOccurence["__birdsong"]);
        }

        if (audio.paused) {
          audio.play();
        } else {
          audio.pause();
          audio.currentTime = 0;
        }

        // Ugly thing to toggle between play/pause
        playButton
          .getElementsByTagName("svg")[0]
          .getElementsByTagName("path")[0]
          .setAttribute(
            "d",
            audio.paused ? "M14 19V5h4v14zm-8 0V5h4v14z" : "M8 5.14v14l11-7z",
          );
      });

      const hasGuessed = today in localStorage;

      guesses.forEach((guess: number) => {
        let btn = document.createElement("div");
        btn.className = "button-div";
        btn.innerHTML += `
          <button
              class="button guess-button"
              value="${guess === todaysIndex ? "yes" : "no"}|${guess}">${birds[guess]["vernacularName"]}
          </button>
        `;
        btn.addEventListener("click", () => {
          localStorage.setItem(today, `${guess}`);
          refreshState();
          image?.setAttribute("style", "");
        });
        buttonsContainer?.appendChild(btn);
      });

      if (hasGuessed) {
        refreshState();
      }
      image?.setAttribute(
        "style",
        hasGuessed ? "" : "filter: blur(15px) grayscale(100%);",
      );

      function refreshState() {
        const userGuess = localStorage.getItem(today) || "";
        const buttons = document.querySelectorAll(".guess-button");
        let userCorrectGuess = true;
        buttons?.forEach((button) => {
          if (button.getAttribute("value")?.startsWith("yes")) {
            button.classList.add("is-success");
          }

          if (button.getAttribute("value") === `no|${userGuess}`) {
            button.classList.add("is-danger");
            userCorrectGuess = false;
          }
          button.setAttribute("disabled", "");
        });

        if (result) {
          if (userCorrectGuess) {
            result.innerHTML += "<b>That's right</b>!";
          } else {
            result.innerHTML += "<b>Tough luck!</b>";
          }
          result.innerHTML += `<br>What you hear is a "${birds[todaysIndex]["vernacularName"]}"<br>(<i>${birds[todaysIndex]["scientificName"]}</i>)`;
          result.innerHTML += `<br><a class='styled-link' href='https://www.gbif.org/species/${todaysBird["speciesKey"]}'>Click here</a> for more about this bird.`;
        }
      }
    });
  </script>

  <body>
    <Header />
    <div class="loading section has-text-centered is-centered">
      <Loader />
    </div>
    <div class="loaded" style="display: none;">
      <div class="columns is-centered is-multiline is-mobile">
        <div class="column is-full has-text-centered">
          <div class="title is-4" style="margin-top: 10px;">
            Guess the Birdsong ðŸŽ¶
          </div>
        </div>

        <div class="column is-full has-text-centered image-container">
          <img class="bird-image" alt="A bird." hidden />
        </div>

        <div class="column is-full has-text-centered credits-details-container">
        </div>
        <div class="column is-full has-text-centered audio-container">
          <Audio />
        </div>

        <div class="column has-text-centered" style="padding-bottom: 0;">
          <div class="is-centered buttons buttons-container"></div>
        </div>
        <div class="column is-full has-text-centered result"></div>
      </div>
    </div>
  </body>
</html>
