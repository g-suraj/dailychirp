---
import { Image } from "astro:assets";
import Header from "../components/Header.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />
    <title>Daily Chirp</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bulma@0.9.4/css/bulma.min.css"
    />
  </head>

  <Header />
  <script>
    import type { Bird } from "../types/types";

    const today = new Date().toDateString();
    const image = document.querySelector(".bird-image");
    const audio = document.querySelector(".bird-audio");
    const buttonsContainer = document.querySelector(".buttons-container");

    async function stableStringToNumGenerator(
      str: string,
      modulo: number,
    ): Promise<number> {
      /* Generate stable random numbers which are index into the birds object */
      const msgUint8 = new TextEncoder().encode(str);
      const hashBuffer = await crypto.subtle.digest("SHA-256", msgUint8);
      const hashArray = Array.from(new Uint8Array(hashBuffer));
      return hashArray.reduce((prev, curr) => prev * curr) % modulo;
    }

    /* Helper to generate today's guesses in a stable manner */
    async function todaysGuesses(todayDateStr: string, numBirds: number) {
      const todaysIndex = await stableStringToNumGenerator(
        todayDateStr,
        numBirds,
      );
      let guesses: number[] = [];
      for (let i = 0; i < 3; ++i) {
        guesses.push((todaysIndex + i + 1) % numBirds);
      }
      const insertionIndex = Math.floor(Math.random() * 4);
      guesses.splice(insertionIndex, 0, todaysIndex);
      return { todaysIndex, guesses };
    }

    window.addEventListener("load", async () => {
      const data = await fetch(
        "https://g-suraj.github.io/xeno-canto-processed/pickled_data.json",
      );
      const birds: Bird[] = await data.json();
      const numBirds = birds.length;

      const todayDateStr = new Date().toDateString();
      const { todaysIndex, guesses } = await todaysGuesses(
        todayDateStr,
        numBirds,
      );

      const todaysBird = birds[todaysIndex];

      image?.setAttribute("src", todaysBird["_pictures"][0]);
      image?.removeAttribute("hidden");
      audio?.setAttribute("src", todaysBird["_occurrences"][0]["__birdsong"]);

      const hasGuessed = today in localStorage;

      guesses.forEach((guess: number) => {
        let btn = document.createElement("div");
        btn.innerHTML += `
          <button 
              style="opacity: 1"
              class="button guess-button"
              value="${guess === todaysIndex ? "yes" : "no"}|${guess}">${birds[guess]["vernacularName"]}
          </button>
        `;
        btn.addEventListener("click", () => {
          localStorage.setItem(today, `${guess}`);
          refreshButtons();
          image?.setAttribute("style", "");
        });
        buttonsContainer?.appendChild(btn);
      });

      if (hasGuessed) {
        refreshButtons();
      }
      image?.setAttribute("style", hasGuessed ? "" : "filter: blur(15px)");
    });

    function refreshButtons() {
      const userGuess = localStorage.getItem(today) || "";
      const buttons = document.querySelectorAll(".guess-button");
      buttons?.forEach((button) => {
        if (button.getAttribute("value")?.startsWith("yes")) {
          button.classList.add("is-success");
        }

        if (button.getAttribute("value") === `no|${userGuess}`) {
          button.classList.add("is-danger");
        }
        button.setAttribute("disabled", "");
      });
    }
  </script>

  <body>
    <section class="section">
      <div class="columns is-centered is-multiline is-mobile">
        <div class="column is-full has-text-centered">
          <div class="title is-4">What's the birdsong?</div>
        </div>

        <div class="column is-full has-text-centered">
          <Image
            class="bird-image"
            alt="A bird."
            width="500"
            inferSize
            src="https://images.naturalis.nl/original/193834.jpg"
            hidden="true"
            style=""
          />
        </div>

        <div class="column is-narrow has-text-centered">
          <audio controls style="width: inherit;" class="bird-audio"></audio>
        </div>

        <div class="column is-full has-text-centered">
          <div class="buttons is-centered buttons-container"></div>
        </div>
      </div>
    </section>
  </body>


</html>
